import{_ as s,c as a,o as n,d as e}from"./app.5347fd45.js";const h=JSON.parse('{"title":"Graphs","description":"","frontmatter":{},"headers":[{"level":2,"title":"Graph generators","slug":"graph-generators","link":"#graph-generators","children":[]},{"level":2,"title":"Trees and forests","slug":"trees-and-forests","link":"#trees-and-forests","children":[]}],"relativePath":"guide/graphs.md"}'),o={name:"guide/graphs.md"},p=e(`<h1 id="graphs" tabindex="-1">Graphs <a class="header-anchor" href="#graphs" aria-hidden="true">#</a></h1><p>Qwiery has a graph package with various algorithms and structures to make it easy to create graphs and analyze them.</p><p>There are several (easy) ways to create a graph, for example via an edge array:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// tapole graph</span></span>
<span class="line"><span style="color:#A6ACCD;">Graph</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fromEdgeArray</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1-&gt;2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2-&gt;2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">])</span></span>
<span class="line"></span></code></pre></div><p>which is equivalent to:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">Graph</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fromArrows</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1-&gt;2-&gt;2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>These simple formats allow you to create unlabelled graphs</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">Graph</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fromArrows</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1-&gt;2-&gt;2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2-&gt;3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">])</span></span>
<span class="line"></span></code></pre></div><p>but it does not allow to add a payload to the nodes or edges. For this purpose you need <strong>the pseudo-cypher format</strong>:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">Graph</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fromPseudoCypher</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">(u:Person{name:&#39;Anna&#39;})-[r:Knows]-&gt;(v{id:33})</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>This will pick up the labels and the payload of nodes and edges. This is not a full Cypher implementation in the sense that traversals and querying are not parsed. The format is meant to be used for data creation, not for data extraction.</p><h2 id="graph-generators" tabindex="-1">Graph generators <a class="header-anchor" href="#graph-generators" aria-hidden="true">#</a></h2><p>There are lots of graph generators and predefined graphs to work with:</p><ul><li>the famous karate club</li><li>the Watts-Strogatz generator</li><li>the Erdos-Renyi generator</li></ul><p>and much more. Simply use</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">Graph</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">small world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">Graph</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">women</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">Graph</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">karate</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">Graph</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Erdos</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">nodeCount</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">120</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>and more. There are diverse name variations for the graph or generator and each one has its own set of parameters.</p><h2 id="trees-and-forests" tabindex="-1">Trees and forests <a class="header-anchor" href="#trees-and-forests" aria-hidden="true">#</a></h2><p>A tree with a root</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> tree </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Tree</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">root</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>can be turned into a forest</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> forest </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> tree</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toForest</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>and you can add children with</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">tree</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">appendChild</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">child</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>You will also find depth-first and breadth-first algorithms to traverse the trees and forest.</p>`,25),l=[p];function t(r,c,i,y,D,d){return n(),a("div",null,l)}const C=s(o,[["render",t]]);export{h as __pageData,C as default};
