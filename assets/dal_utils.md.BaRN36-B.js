import{_ as s,c as a,o as i,V as e}from"./chunks/framework.Ca-bdDpS.js";const u=JSON.parse('{"title":"Qwiery Utils","description":"","frontmatter":{},"headers":[],"relativePath":"dal/utils.md","filePath":"dal/utils.md"}'),t={name:"dal/utils.md"},l=e(`<h1 id="qwiery-utils" tabindex="-1">Qwiery Utils <a class="header-anchor" href="#qwiery-utils" aria-label="Permalink to &quot;Qwiery Utils&quot;">​</a></h1><p>The <strong>Qwiery Utils package</strong> <a href="https://github.com/Qwiery/qwiery/tree/main/packages/qwiery-utils" target="_blank" rel="noreferrer">source</a> contains a cornucopia of utility functions which are used across Qwiery but also have on their owm great value.</p><p>The following (static) classes are available:</p><ul><li><a href="#utils">Utils</a></li><li><a href="#dates">Dates</a></li><li><a href="#datestring">DateString</a></li><li><a href="#durations">Durations</a></li><li><a href="#predecessors">Predecessors</a></li><li><a href="#predecessor">Predecessor</a></li><li><a href="#strings">Strings</a></li><li><a href="#time">Time</a></li><li><a href="#colors">Colors</a></li><li><a href="#crypto">Crypto</a></li></ul><h2 id="utils" tabindex="-1">Utils <a class="header-anchor" href="#utils" aria-label="Permalink to &quot;Utils{#utils}&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Utils } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@orbifold/utils&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="amounttomoneyformat" tabindex="-1">amountToMoneyFormat <a class="header-anchor" href="#amounttomoneyformat" aria-label="Permalink to &quot;amountToMoneyFormat&quot;">​</a></h3><p>Returns a money format or an empty string if the conversion failed. If no currency is specified, USD will be used as a default.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Utils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">amountToMoneyFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;EUR&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// €12.00</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Utils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">amountToMoneyFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// US$10.00</span></span></code></pre></div><p>The full list of currency codes can be found in various places, see e.g. <a href="https://www.six-group.com/en/products-services/financial-information/data-standards.html#scrollTo=currency-codes" target="_blank" rel="noreferrer">this ISO-4217</a>.</p><h3 id="booltoyesno" tabindex="-1">boolToYesNo <a class="header-anchor" href="#booltoyesno" aria-label="Permalink to &quot;boolToYesNo&quot;">​</a></h3><p>Turns the given input into &quot;Yes&quot; or &quot;No&quot;. It also accepts things like &#39;yep&#39;, &#39;nah&#39;, &#39;nope&#39; and so on.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Utils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">boolToYesNo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Yes</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Utils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">boolToYesNo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// No</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Utils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">boolToYesNo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nope&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// No</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Utils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">boolToYesNo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;duh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Yes</span></span></code></pre></div><h3 id="cameltypetotitle" tabindex="-1">camelTypeToTitle <a class="header-anchor" href="#cameltypetotitle" aria-label="Permalink to &quot;camelTypeToTitle&quot;">​</a></h3><p>Turns a camel-cased string into a title.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Utils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">camelTypeToTitle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;itWorks&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// It Works</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Utils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">camelTypeToTitle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;thisTime&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// This Time</span></span></code></pre></div><h2 id="date" tabindex="-1">Date <a class="header-anchor" href="#date" aria-label="Permalink to &quot;Date{#date}&quot;">​</a></h2><h2 id="datestrings" tabindex="-1">DateString <a class="header-anchor" href="#datestrings" aria-label="Permalink to &quot;DateString{#datestrings}&quot;">​</a></h2><h2 id="durations" tabindex="-1">Durations <a class="header-anchor" href="#durations" aria-label="Permalink to &quot;Durations{#durations}&quot;">​</a></h2><h2 id="predecessors" tabindex="-1">Predecessors <a class="header-anchor" href="#predecessors" aria-label="Permalink to &quot;Predecessors{#predecessors}&quot;">​</a></h2><h2 id="strings" tabindex="-1">Strings <a class="header-anchor" href="#strings" aria-label="Permalink to &quot;Strings{#strings}&quot;">​</a></h2><h2 id="time" tabindex="-1">Time <a class="header-anchor" href="#time" aria-label="Permalink to &quot;Time{#time}&quot;">​</a></h2><h2 id="colors" tabindex="-1">Colors <a class="header-anchor" href="#colors" aria-label="Permalink to &quot;Colors{#colors}&quot;">​</a></h2><p>Part of <a href="https://github.com/Qwiery/qwiery-utils" target="_blank" rel="noreferrer">the Qwiery Utils package</a>, the <code>Colors</code> class provides a set of color-related utilities.</p><p>Install with:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install @orbifold/utils</span></span></code></pre></div><p>and import in your module with:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {Colors} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@orbifold/utils&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="namedcolor" tabindex="-1">NamedColor <a class="header-anchor" href="#namedcolor" aria-label="Permalink to &quot;NamedColor&quot;">​</a></h3><p>This is a dictionary of the classic predefined (Web) CSS colors and returns the hex value for a given name.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Colors.NamedColor[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;red&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #FF0000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Colors.NamedColor[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;papayawhip&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #FFEFD5</span></span></code></pre></div><h3 id="randomknowncolor" tabindex="-1">randomKnownColor <a class="header-anchor" href="#randomknowncolor" aria-label="Permalink to &quot;randomKnownColor&quot;">​</a></h3><p>Returns a random color name from the NamedColor set.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Colors.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">randomKnownColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// e.g. &#39;papayawhip&#39;</span></span></code></pre></div><p>You can turn this into a hex value by passing <code>true</code> as the first argument.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Colors.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">randomKnownColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// e.g. &#39;#FFEFD5&#39;</span></span></code></pre></div><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><ul><li><code>hexValue</code> (optional, default <code>false</code>)</li></ul><p>Returns <strong>string</strong>;</p><h3 id="randomknowncolors" tabindex="-1">randomKnownColors <a class="header-anchor" href="#randomknowncolors" aria-label="Permalink to &quot;randomKnownColors&quot;">​</a></h3><p>Returns an array of random colors from the NamedColor set.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Colors.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">randomKnownColors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// e.g. [&#39;papayawhip&#39;, &#39;red&#39;, &#39;blue&#39;]</span></span></code></pre></div><p>You can turn this into an array of hex values by passing <code>true</code> as the first argument.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Colors.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">randomKnownColors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// e.g. [&#39;#FFEFD5&#39;, &#39;#FF0000&#39;, &#39;#0000FF&#39;]</span></span></code></pre></div><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><ul><li><code>count</code> (optional, default <code>10</code>) How many colors to return.</li><li><code>hexValue</code> (optional, default <code>false</code>) Whether to return hex values.</li></ul><p>Returns <strong>string[]</strong>;</p><h3 id="getknowncolorfromhex" tabindex="-1">getKnownColorFromHex <a class="header-anchor" href="#getknowncolorfromhex" aria-label="Permalink to &quot;getKnownColorFromHex&quot;">​</a></h3><p>Returns the name of the given hex value if it matches a named color.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Colors.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getKnownColorFromHex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#FF0000&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// red</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Colors.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getKnownColorFromHex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#FFEFD5&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// papayawhip</span></span></code></pre></div><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><ul><li><code>hex</code> <strong>string</strong> {string} An hex color.</li></ul><p>Returns <strong>string | null</strong></p><h3 id="hex2rgb" tabindex="-1">hex2rgb <a class="header-anchor" href="#hex2rgb" aria-label="Permalink to &quot;hex2rgb&quot;">​</a></h3><p>Converts the hex color to rgb (as a 3-array).</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Colors.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hex2rgb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#FF0000&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// [255, 0, 0]</span></span></code></pre></div><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><ul><li><code>hex</code> {string} A hex color.</li></ul><p>Returns <strong>number[] | null</strong></p><h3 id="rgb2hex" tabindex="-1">rgb2hex <a class="header-anchor" href="#rgb2hex" aria-label="Permalink to &quot;rgb2hex&quot;">​</a></h3><p>Converts the given RGB to a hex color.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Colors.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rgb2hex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #FF0000</span></span></code></pre></div><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><ul><li><code>args</code> <strong>number[]</strong> A 3-array representing RGB.</li></ul><p>Returns <strong>string</strong></p><h3 id="rgb2hsl" tabindex="-1">rgb2hsl <a class="header-anchor" href="#rgb2hsl" aria-label="Permalink to &quot;rgb2hsl&quot;">​</a></h3><p>Converts an RGB color value to HSL. Conversion formula adapted from <a href="http://en.wikipedia.org/wiki/HSL_color_space" target="_blank" rel="noreferrer">this reference</a>. Assumes r, g, and b are contained in the set [0, 255] and returns h, s, and l in the set [0, 1].</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Colors.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rgb2hsl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// [0, 1, 0.5]</span></span></code></pre></div><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><ul><li><code>args</code> <strong>...number</strong></li></ul><h3 id="hsl2rgb" tabindex="-1">hsl2rgb <a class="header-anchor" href="#hsl2rgb" aria-label="Permalink to &quot;hsl2rgb&quot;">​</a></h3><p>Converts an HSL color value to RGB. Conversion formula adapted from <a href="http://en.wikipedia.org/wiki/HSL_color_space" target="_blank" rel="noreferrer">this reference</a>. Assumes h, s, and l are contained in the set [0, 1] and returns r, g, and b in the set [0, 255].</p><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><ul><li><code>args</code> <strong>...any</strong></li></ul><h2 id="crypto" tabindex="-1">Crypto <a class="header-anchor" href="#crypto" aria-label="Permalink to &quot;Crypto{#crypto}&quot;">​</a></h2>`,75),n=[l];function h(r,o,p,k,d,c){return i(),a("div",null,n)}const E=s(t,[["render",h]]);export{u as __pageData,E as default};
