import{_ as s,o as i,c as a,R as t}from"./chunks/framework.MrHX2r25.js";const u=JSON.parse('{"title":"Qwiery Utils","description":"","frontmatter":{},"headers":[],"relativePath":"dal/utils.md","filePath":"dal/utils.md"}'),e={name:"dal/utils.md"},l=t(`<h1 id="qwiery-utils" tabindex="-1">Qwiery Utils <a class="header-anchor" href="#qwiery-utils" aria-label="Permalink to &quot;Qwiery Utils&quot;">​</a></h1><p>The <strong>Qwiery Utils package</strong> <a href="https://github.com/Qwiery/qwiery/tree/main/packages/qwiery-utils" target="_blank" rel="noreferrer">source</a> contains a cornucopia of utility functions which are used across Qwiery but also have on their owm great value.</p><p>The following (static) classes are available:</p><ul><li><a href="#utils">Utils</a> (<a href="https://github.com/Qwiery/qwiery/blob/main/packages/qwiery-utils/lib/utils.js" target="_blank" rel="noreferrer">source</a>)</li><li><a href="#dates">Dates</a></li><li><a href="#datestring">DateString</a></li><li><a href="#durations">Durations</a></li><li><a href="#predecessors">Predecessors</a></li><li><a href="#predecessor">Predecessor</a></li><li><a href="#strings">Strings</a></li><li><a href="#time">Time</a></li><li><a href="#colors">Colors</a></li><li><a href="#crypto">Crypto</a></li></ul><h2 id="utils" tabindex="-1">Utils <a class="header-anchor" href="#utils" aria-label="Permalink to &quot;Utils{#utils}&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Utils</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;qwiery-utils&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="amounttomoneyformat" tabindex="-1">amountToMoneyFormat <a class="header-anchor" href="#amounttomoneyformat" aria-label="Permalink to &quot;amountToMoneyFormat&quot;">​</a></h3><p>Returns a money format or an empty string if the conversion failed. If no currency is specified, USD will be used as a default.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Utils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">amountToMoneyFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;EUR&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// €12.00</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Utils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">amountToMoneyFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// US$10.00</span></span></code></pre></div><p>The full list of currency codes can be found in various places, see e.g. <a href="https://www.six-group.com/en/products-services/financial-information/data-standards.html#scrollTo=currency-codes" target="_blank" rel="noreferrer">this ISO-4217</a>.</p><h3 id="booltoyesno" tabindex="-1">boolToYesNo <a class="header-anchor" href="#booltoyesno" aria-label="Permalink to &quot;boolToYesNo&quot;">​</a></h3><p>Turns the given input into &quot;Yes&quot; or &quot;No&quot;. It also accepts things like &#39;yep&#39;, &#39;nah&#39;, &#39;nope&#39; and so on.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Utils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">boolToYesNo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Yes</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Utils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">boolToYesNo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// No</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Utils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">boolToYesNo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nope&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// No</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Utils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">boolToYesNo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;duh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Yes</span></span></code></pre></div><h3 id="cameltypetotitle" tabindex="-1">camelTypeToTitle <a class="header-anchor" href="#cameltypetotitle" aria-label="Permalink to &quot;camelTypeToTitle&quot;">​</a></h3><p>Turns a camel-cased string into a title.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Utils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">camelTypeToTitle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;itWorks&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// It Works</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Utils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">camelTypeToTitle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;thisTime&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// This Time</span></span></code></pre></div><h2 id="date" tabindex="-1">Date <a class="header-anchor" href="#date" aria-label="Permalink to &quot;Date{#date}&quot;">​</a></h2><h2 id="datestrings" tabindex="-1">DateString <a class="header-anchor" href="#datestrings" aria-label="Permalink to &quot;DateString{#datestrings}&quot;">​</a></h2><h2 id="durations" tabindex="-1">Durations <a class="header-anchor" href="#durations" aria-label="Permalink to &quot;Durations{#durations}&quot;">​</a></h2><h2 id="predecessors" tabindex="-1">Predecessors <a class="header-anchor" href="#predecessors" aria-label="Permalink to &quot;Predecessors{#predecessors}&quot;">​</a></h2><h2 id="strings" tabindex="-1">Strings <a class="header-anchor" href="#strings" aria-label="Permalink to &quot;Strings{#strings}&quot;">​</a></h2><h2 id="time" tabindex="-1">Time <a class="header-anchor" href="#time" aria-label="Permalink to &quot;Time{#time}&quot;">​</a></h2><h2 id="colors" tabindex="-1">Colors <a class="header-anchor" href="#colors" aria-label="Permalink to &quot;Colors{#colors}&quot;">​</a></h2><h2 id="crypto" tabindex="-1">Crypto <a class="header-anchor" href="#crypto" aria-label="Permalink to &quot;Crypto{#crypto}&quot;">​</a></h2>`,24),n=[l];function h(r,o,p,k,d,c){return i(),a("div",null,n)}const g=s(e,[["render",h]]);export{u as __pageData,g as default};
